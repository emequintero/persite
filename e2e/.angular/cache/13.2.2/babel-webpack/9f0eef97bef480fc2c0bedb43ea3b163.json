{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { Injectable, ElementRef, Optional, Directive, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { matches } from '@angular-mdc/web/dom';\nimport { supportsCssVariables } from '@material/ripple/util';\nimport { MDCRippleFoundation } from '@material/ripple';\n/**\n * @fileoverview added by tsickle\n * Generated from: ripple/ripple.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@material/ripple';\nlet MdcRipple = /*#__PURE__*/(() => {\n  class MdcRipple {\n    /**\n     * @param {?} element\n     * @param {?=} foundation\n     */\n    constructor(element, foundation) {\n      this.element = element;\n      this.initialized = false;\n      this._foundation = foundation || new MDCRippleFoundation(MdcRipple.createAdapter(\n      /** @type {?} */\n      {\n        _root: element.nativeElement\n      }));\n    }\n    /**\n     * @param {?} instance\n     * @return {?}\n     */\n\n\n    static createAdapter(instance) {\n      /** @type {?} */\n      const adapter = {\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => instance._root.classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => instance._root.classList.remove(className),\n        browserSupportsCssVars:\n        /**\n        * @return {?}\n        */\n        () => typeof window !== 'undefined' ? supportsCssVariables(window) : false,\n        isUnbounded:\n        /**\n        * @return {?}\n        */\n        () => coerceBooleanProperty(instance.unbounded),\n        isSurfaceActive:\n        /**\n        * @return {?}\n        */\n        () => matches(instance._root, ':active'),\n        isSurfaceDisabled:\n        /**\n        * @return {?}\n        */\n        () => coerceBooleanProperty(instance.disabled),\n        containsEventTarget:\n        /**\n        * @param {?} target\n        * @return {?}\n        */\n        target => instance._root.contains(\n        /** @type {?} */\n        target),\n        registerDocumentInteractionHandler:\n        /**\n        * @template K\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) => typeof document === 'object' && !!document ?\n        /** @type {?} */\n        document.documentElement.addEventListener(evtType, handler, supportsPassiveEventListeners()) : {},\n        deregisterDocumentInteractionHandler:\n        /**\n        * @template K\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) => typeof document === 'object' && !!document ?\n        /** @type {?} */\n        document.documentElement.removeEventListener(evtType, handler, supportsPassiveEventListeners()) : {},\n        registerResizeHandler:\n        /**\n        * @param {?} handler\n        * @return {?}\n        */\n        handler => typeof window !== 'undefined' ? window.addEventListener('resize', handler) : {},\n        deregisterResizeHandler:\n        /**\n        * @param {?} handler\n        * @return {?}\n        */\n        handler => typeof window !== 'undefined' ? window.removeEventListener('resize', handler) : {},\n        updateCssVariable:\n        /**\n        * @param {?} varName\n        * @param {?} value\n        * @return {?}\n        */\n        (varName, value) =>\n        /** @type {?} */\n        instance._root.style.setProperty(varName, value),\n        computeBoundingRect:\n        /**\n        * @return {?}\n        */\n        () => typeof document === 'object' && !!document ? instance._root.getBoundingClientRect() : {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          width: 0,\n          height: 0\n        },\n        getWindowPageOffset:\n        /**\n        * @return {?}\n        */\n        () => typeof window !== 'undefined' ? {\n          x: window.pageXOffset,\n          y: window.pageYOffset\n        } : {\n          x: 0,\n          y: 0\n        },\n        registerInteractionHandler:\n        /**\n        * @template K\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) =>\n        /** @type {?} */\n        instance._root.addEventListener(evtType, handler, supportsPassiveEventListeners()),\n        deregisterInteractionHandler:\n        /**\n        * @template K\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) =>\n        /** @type {?} */\n        instance._root.removeEventListener(evtType, handler, supportsPassiveEventListeners())\n      };\n      return adapter;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    init() {\n      if (!this.initialized) {\n        this._foundation.init();\n\n        this.initialized = true;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    destroy() {\n      if (this.initialized) {\n        this.initialized = false;\n\n        this._foundation.destroy();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    layout() {\n      this._foundation.layout();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this.destroy();\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n\n\n    activateRipple(event) {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () =>\n      /** @type {?} */\n      this._foundation.activate(event));\n    }\n    /**\n     * @return {?}\n     */\n\n\n    deactivateRipple() {\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () =>\n      /** @type {?} */\n      this._foundation.deactivate());\n    }\n    /**\n     * @return {?}\n     */\n\n\n    handleBlur() {\n      this._foundation.handleBlur();\n    }\n\n  }\n\n  MdcRipple.ɵfac = function MdcRipple_Factory(t) {\n    return new (t || MdcRipple)(ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(ɵngcc1.MDCRippleFoundation, 8));\n  };\n\n  MdcRipple.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MdcRipple,\n    factory: MdcRipple.ɵfac\n  });\n  /** @nocollapse */\n\n  return MdcRipple;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MdcRippleDirective = /*#__PURE__*/(() => {\n  class MdcRippleDirective {\n    /**\n     * @param {?} _ripple\n     * @param {?} elementRef\n     */\n    constructor(_ripple, elementRef) {\n      this._ripple = _ripple;\n      this.elementRef = elementRef;\n      this._primary = false;\n      this._secondary = false;\n      this._disabled = false;\n      this._unbounded = false;\n      this._root = this.elementRef.nativeElement;\n      this._ripple = this._createRipple();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get attachTo() {\n      return this._attachTo;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n\n    set attachTo(element) {\n      var _a, _b;\n\n      this._attachTo = element;\n      (_b = (_a = this._attachTo) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.add('mdc-ripple-surface');\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get primary() {\n      return this._primary;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set primary(value) {\n      this._primary = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get secondary() {\n      return this._secondary;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set secondary(value) {\n      this._secondary = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get unbounded() {\n      return this._unbounded;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set unbounded(value) {\n      this._unbounded = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes['primary'] && this.attachTo) {\n        if (this._primary) {\n          this.attachTo.classList.add('mdc-ripple-surface--primary');\n        } else {\n          this.attachTo.classList.remove('mdc-ripple-surface--primary');\n        }\n      }\n\n      if (changes['secondary'] && this.attachTo) {\n        if (this._secondary) {\n          this.attachTo.classList.add('mdc-ripple-surface--accent');\n        } else {\n          this.attachTo.classList.remove('mdc-ripple-surface--accent');\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      this._ripple.init();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._ripple.destroy();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _createRipple() {\n      /** @type {?} */\n      const adapter = Object.assign(Object.assign({}, MdcRipple.createAdapter(this)), {\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => {\n          var _a, _b;\n\n          return (_b = (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.add(className);\n        },\n        computeBoundingRect:\n        /**\n        * @return {?}\n        */\n        () => {\n          var _a, _b;\n\n          return _b = (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect(), _b !== null && _b !== void 0 ? _b : {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        isSurfaceActive:\n        /**\n        * @return {?}\n        */\n        () => matches(this.attachTo, ':active'),\n        isSurfaceDisabled:\n        /**\n        * @return {?}\n        */\n        () => this._disabled,\n        isUnbounded:\n        /**\n        * @return {?}\n        */\n        () => this._unbounded,\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => {\n          var _a, _b;\n\n          return (_b = (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.remove(className);\n        },\n        updateCssVariable:\n        /**\n        * @param {?} varName\n        * @param {?} value\n        * @return {?}\n        */\n        (varName, value) => {\n          var _a, _b;\n\n          return (_b = (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.setProperty(varName, value);\n        },\n        registerInteractionHandler:\n        /**\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) => {\n          var _a;\n\n          return (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.addEventListener(evtType, handler, supportsPassiveEventListeners());\n        },\n        deregisterInteractionHandler:\n        /**\n        * @param {?} evtType\n        * @param {?} handler\n        * @return {?}\n        */\n        (evtType, handler) => {\n          var _a;\n\n          return (_a = this.attachTo) === null || _a === void 0 ? void 0 : _a.removeEventListener(evtType, handler, supportsPassiveEventListeners());\n        }\n      });\n      return new MdcRipple(this.elementRef, new MDCRippleFoundation(adapter));\n    }\n\n  }\n\n  MdcRippleDirective.ɵfac = function MdcRippleDirective_Factory(t) {\n    return new (t || MdcRippleDirective)(ɵngcc0.ɵɵdirectiveInject(MdcRipple), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcRippleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcRippleDirective,\n    selectors: [[\"\", \"mdcRipple\", \"\"], [\"mdc-ripple\"]],\n    inputs: {\n      attachTo: \"attachTo\",\n      primary: \"primary\",\n      secondary: \"secondary\",\n      disabled: \"disabled\",\n      unbounded: \"unbounded\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([MdcRipple]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  /** @nocollapse */\n\n  return MdcRippleDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: ripple/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MdcRippleModule = /*#__PURE__*/(() => {\n  class MdcRippleModule {}\n\n  MdcRippleModule.ɵfac = function MdcRippleModule_Factory(t) {\n    return new (t || MdcRippleModule)();\n  };\n\n  MdcRippleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcRippleModule\n  });\n  MdcRippleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return MdcRippleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcRippleModule, {\n    declarations: [MdcRippleDirective],\n    exports: [MdcRippleDirective]\n  });\n})();\n\nexport { MdcRipple, MdcRippleDirective, MdcRippleModule }; //# sourceMappingURL=ripple.js.map","map":null,"metadata":{},"sourceType":"module"}