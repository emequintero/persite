{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCLinearProgressFoundation } from './foundation';\n\nvar MDCLinearProgress =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCLinearProgress, _super);\n\n  function MDCLinearProgress() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCLinearProgress.attachTo = function (root) {\n    return new MDCLinearProgress(root);\n  };\n\n  Object.defineProperty(MDCLinearProgress.prototype, \"determinate\", {\n    set: function (value) {\n      this.foundation_.setDeterminate(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"progress\", {\n    set: function (value) {\n      this.foundation_.setProgress(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"buffer\", {\n    set: function (value) {\n      this.foundation_.setBuffer(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"reverse\", {\n    set: function (value) {\n      this.foundation_.setReverse(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCLinearProgress.prototype.open = function () {\n    this.foundation_.open();\n  };\n\n  MDCLinearProgress.prototype.close = function () {\n    this.foundation_.close();\n  };\n\n  MDCLinearProgress.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      forceLayout: function () {\n        return _this.root_.offsetWidth;\n      },\n      getBuffer: function () {\n        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.BUFFER_SELECTOR);\n      },\n      getPrimaryBar: function () {\n        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR);\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      removeAttribute: function (attributeName) {\n        _this.root_.removeAttribute(attributeName);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      setAttribute: function (attributeName, value) {\n        _this.root_.setAttribute(attributeName, value);\n      },\n      setStyle: function (el, styleProperty, value) {\n        return el.style.setProperty(styleProperty, value);\n      }\n    };\n    return new MDCLinearProgressFoundation(adapter);\n  };\n\n  return MDCLinearProgress;\n}(MDCComponent);\n\nexport { MDCLinearProgress }; //# sourceMappingURL=component.js.map","map":null,"metadata":{},"sourceType":"module"}