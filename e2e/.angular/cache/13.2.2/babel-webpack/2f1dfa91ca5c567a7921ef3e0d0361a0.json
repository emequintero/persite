{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { cssClasses } from '../constants';\nimport { MDCTopAppBarFoundation } from '../standard/foundation';\n\nvar MDCFixedTopAppBarFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCFixedTopAppBarFoundation, _super);\n\n  function MDCFixedTopAppBarFoundation() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * State variable for the previous scroll iteration top app bar state\n     */\n\n\n    _this.wasScrolled_ = false;\n    return _this;\n  }\n  /**\n   * Scroll handler for applying/removing the modifier class on the fixed top app bar.\n   * @override\n   */\n\n\n  MDCFixedTopAppBarFoundation.prototype.handleTargetScroll = function () {\n    var currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.wasScrolled_) {\n        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = false;\n      }\n    } else {\n      if (!this.wasScrolled_) {\n        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = true;\n      }\n    }\n  };\n\n  return MDCFixedTopAppBarFoundation;\n}(MDCTopAppBarFoundation);\n\nexport { MDCFixedTopAppBarFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCFixedTopAppBarFoundation; //# sourceMappingURL=foundation.js.map","map":null,"metadata":{},"sourceType":"module"}