{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCTabIndicatorFoundation } from './foundation';\n/* istanbul ignore next: subclass is not a branch statement */\n\nvar MDCSlidingTabIndicatorFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSlidingTabIndicatorFoundation, _super);\n\n  function MDCSlidingTabIndicatorFoundation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSlidingTabIndicatorFoundation.prototype.activate = function (previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    } // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n    // Calculate the dimensions based on the dimensions of the previous indicator\n\n\n    var currentClientRect = this.computeContentClientRect();\n    var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    var xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', \"translateX(\" + xPosition + \"px) scaleX(\" + widthDelta + \")\"); // Force repaint before updating classes and transform to ensure the transform properly takes effect\n\n    this.computeContentClientRect();\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  };\n\n  MDCSlidingTabIndicatorFoundation.prototype.deactivate = function () {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  };\n\n  return MDCSlidingTabIndicatorFoundation;\n}(MDCTabIndicatorFoundation);\n\nexport { MDCSlidingTabIndicatorFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCSlidingTabIndicatorFoundation; //# sourceMappingURL=sliding-foundation.js.map","map":null,"metadata":{},"sourceType":"module"}