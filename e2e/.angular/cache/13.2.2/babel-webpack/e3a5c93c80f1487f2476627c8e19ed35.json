{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Component, ChangeDetectionStrategy, Input, EventEmitter, ViewEncapsulation, NgZone, ChangeDetectorRef, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, fromEvent } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { MDCComponent } from '@angular-mdc/web/base';\nimport { MDCRippleFoundation } from '@material/ripple';\nimport { MdcRipple } from '@angular-mdc/web/ripple';\nimport { MDCTopAppBarBaseFoundation, MDCShortTopAppBarFoundation, MDCFixedTopAppBarFoundation, MDCTopAppBarFoundation, cssClasses } from '@material/top-app-bar';\n/**\n * @fileoverview added by tsickle\n * Generated from: top-app-bar/top-app-bar.directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular-mdc/web/ripple';\nimport * as ɵngcc3 from '@angular/cdk/platform';\n\nfunction MdcTopAppBarSection_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 1);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nconst _c0 = [\"*\"];\nlet MdcTopAppBarFixedAdjust = /*#__PURE__*/(() => {\n  class MdcTopAppBarFixedAdjust {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTopAppBarFixedAdjust.ɵfac = function MdcTopAppBarFixedAdjust_Factory(t) {\n    return new (t || MdcTopAppBarFixedAdjust)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTopAppBarFixedAdjust.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTopAppBarFixedAdjust,\n    selectors: [[\"\", \"mdcTopAppBarFixedAdjust\", \"\"]],\n    hostAttrs: [1, \"mdc-top-app-bar--fixed-adjust\"]\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarFixedAdjust;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTopAppBarRow = /*#__PURE__*/(() => {\n  class MdcTopAppBarRow {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTopAppBarRow.ɵfac = function MdcTopAppBarRow_Factory(t) {\n    return new (t || MdcTopAppBarRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTopAppBarRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTopAppBarRow,\n    selectors: [[\"mdc-top-app-bar-row\"], [\"\", \"mdcTopAppBarRow\", \"\"]],\n    hostAttrs: [1, \"mdc-top-app-bar__row\"],\n    exportAs: [\"mdcTopAppBarRow\"]\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarRow;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTopAppBarSection = /*#__PURE__*/(() => {\n  class MdcTopAppBarSection {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTopAppBarSection.ɵfac = function MdcTopAppBarSection_Factory(t) {\n    return new (t || MdcTopAppBarSection)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTopAppBarSection.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdcTopAppBarSection,\n    selectors: [[\"mdc-top-app-bar-section\"], [\"\", \"mdcTopAppBarSection\", \"\"]],\n    hostAttrs: [\"role\", \"toolbar\", 1, \"mdc-top-app-bar__section\"],\n    hostVars: 4,\n    hostBindings: function MdcTopAppBarSection_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mdc-top-app-bar__section--align-start\", ctx.align === \"start\")(\"mdc-top-app-bar__section--align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      title: \"title\",\n      align: \"align\"\n    },\n    exportAs: [\"mdcTopAppBarSection\"],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"mdc-top-app-bar__title\", 4, \"ngIf\"], [1, \"mdc-top-app-bar__title\"]],\n    template: function MdcTopAppBarSection_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, MdcTopAppBarSection_span_1_Template, 2, 1, \"span\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarSection;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTopAppBarActionItem = /*#__PURE__*/(() => {\n  class MdcTopAppBarActionItem {\n    /**\n     * @param {?} elementRef\n     * @param {?} _ripple\n     */\n    constructor(elementRef, _ripple) {\n      this.elementRef = elementRef;\n      this._ripple = _ripple;\n      this._root = elementRef.nativeElement;\n      _ripple = this._createRipple();\n\n      _ripple.init();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._ripple.destroy();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _createRipple() {\n      /** @type {?} */\n      const adapter = Object.assign(Object.assign({}, MdcRipple.createAdapter(this)), {\n        isUnbounded:\n        /**\n        * @return {?}\n        */\n        () => true\n      });\n      return new MdcRipple(this.elementRef, new MDCRippleFoundation(adapter));\n    }\n\n  }\n\n  MdcTopAppBarActionItem.ɵfac = function MdcTopAppBarActionItem_Factory(t) {\n    return new (t || MdcTopAppBarActionItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MdcRipple));\n  };\n\n  MdcTopAppBarActionItem.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTopAppBarActionItem,\n    selectors: [[\"\", \"mdcTopAppBarActionItem\", \"\"], [\"mdc-top-app-bar-action-item\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mdc-top-app-bar__action-item\", \"mdc-icon-button\"],\n    exportAs: [\"mdcTopAppBarActionItem\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([MdcRipple])]\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarActionItem;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTopAppBarNavigationIcon = /*#__PURE__*/(() => {\n  class MdcTopAppBarNavigationIcon {\n    /**\n     * @param {?} elementRef\n     * @param {?} _ripple\n     */\n    constructor(elementRef, _ripple) {\n      this.elementRef = elementRef;\n      this._ripple = _ripple;\n      this._root = elementRef.nativeElement;\n      _ripple = this._createRipple();\n\n      _ripple.init();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._ripple.destroy();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _createRipple() {\n      /** @type {?} */\n      const adapter = Object.assign(Object.assign({}, MdcRipple.createAdapter(this)), {\n        isUnbounded:\n        /**\n        * @return {?}\n        */\n        () => true\n      });\n      return new MdcRipple(this.elementRef, new MDCRippleFoundation(adapter));\n    }\n\n  }\n\n  MdcTopAppBarNavigationIcon.ɵfac = function MdcTopAppBarNavigationIcon_Factory(t) {\n    return new (t || MdcTopAppBarNavigationIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MdcRipple));\n  };\n\n  MdcTopAppBarNavigationIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTopAppBarNavigationIcon,\n    selectors: [[\"\", \"mdcTopAppBarNavIcon\", \"\"], [\"mdc-icon\", \"mdcTopAppBarNavigationIcon\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mdc-top-app-bar__navigation-icon\", \"mdc-icon-button\"],\n    exportAs: [\"mdcTopAppBarNavigationIcon\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([MdcRipple])]\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarNavigationIcon;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTopAppBarTitle = /*#__PURE__*/(() => {\n  class MdcTopAppBarTitle {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTopAppBarTitle.ɵfac = function MdcTopAppBarTitle_Factory(t) {\n    return new (t || MdcTopAppBarTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTopAppBarTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTopAppBarTitle,\n    selectors: [[\"mdc-top-app-bar-title\"], [\"\", \"mdcTopAppBarTitle\", \"\"]],\n    hostAttrs: [1, \"mdc-top-app-bar__title\"],\n    exportAs: [\"mdcTopAppBarTitle\"]\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBarTitle;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: top-app-bar/top-app-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Event object emitted by MdcTopAppBar navigation icon selected.\n */\n\n\nclass MdcTopAppBarNavSelected {\n  /**\n   * @param {?} source\n   */\n  constructor(source) {\n    this.source = source;\n  }\n\n}\n\nlet MdcTopAppBar = /*#__PURE__*/(() => {\n  class MdcTopAppBar extends MDCComponent {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _changeDetectorRef\n     * @param {?} elementRef\n     */\n    constructor(_ngZone, _platform, _changeDetectorRef, elementRef) {\n      super(elementRef);\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.elementRef = elementRef;\n      /**\n       * Emits whenever the component is destroyed.\n       */\n\n      this._destroyed = new Subject();\n      this._fixed = false;\n      this._prominent = false;\n      this._short = false;\n      this._shortCollapsed = false;\n      this._dense = false;\n      this._fixedAdjustElement = null;\n      this._scrollTarget = this._platform.isBrowser ? this.scrollTarget || window : undefined;\n      /**\n       * Event emitted when the navigation icon is selected.\n       */\n\n      this.navigationSelected = new EventEmitter();\n      this._scrollTargetSubscription = null;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get fixed() {\n      return this._fixed;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set fixed(value) {\n      if (value !== this._fixed) {\n        this.setFixed(value);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get prominent() {\n      return this._prominent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set prominent(value) {\n      if (value !== this._prominent) {\n        this.setProminent(value);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get short() {\n      return this._short;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set short(value) {\n      if (value !== this._short) {\n        this.setShort(value);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get shortCollapsed() {\n      return this._shortCollapsed;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set shortCollapsed(value) {\n      if (value !== this._shortCollapsed) {\n        this.setShortCollapsed(value);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get dense() {\n      return this._dense;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set dense(value) {\n      if (value !== this._dense) {\n        this.setDense(value);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get fixedAdjustElement() {\n      return this._fixedAdjustElement;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n\n    set fixedAdjustElement(element) {\n      if (this._fixedAdjustElement !== element) {\n        this._fixedAdjustElement = element;\n\n        this._initTopAppBar();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get scrollTarget() {\n      return this._scrollTarget;\n    }\n    /**\n     * @param {?} target\n     * @return {?}\n     */\n\n\n    set scrollTarget(target) {\n      if (target !== this._scrollTarget) {\n        this._scrollTarget = target ? target : this._platform.isBrowser ? window : undefined;\n\n        this._initScrollHandler();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    getDefaultFoundation() {\n      /** @type {?} */\n      const adapter = {\n        hasClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.contains(className),\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => {\n          if (className === cssClasses.SHORT_COLLAPSED_CLASS && this.shortCollapsed) {\n            return;\n          }\n\n          this._getHostElement().classList.remove(className);\n        },\n        setStyle:\n        /**\n        * @param {?} property\n        * @param {?} value\n        * @return {?}\n        */\n        (property, value) => this._getHostElement().style.setProperty(property, value),\n        getTopAppBarHeight:\n        /**\n        * @return {?}\n        */\n        () => this._getHostElement().clientHeight,\n        notifyNavigationIconClicked:\n        /**\n        * @return {?}\n        */\n        () => this.navigationSelected.emit({\n          source: this\n        }),\n        getViewportScrollY:\n        /**\n        * @return {?}\n        */\n        () => {\n          if (!this._platform.isBrowser) {\n            return 0;\n          }\n\n          return this._scrollTarget[this._scrollTarget === window ? 'pageYOffset' : 'scrollTop'];\n        },\n        getTotalActionItems:\n        /**\n        * @return {?}\n        */\n        () => this.actions ? this.actions.length : 0\n      };\n      /** @type {?} */\n\n      let foundation;\n\n      if (!this.elementRef) {\n        return new MDCTopAppBarBaseFoundation(adapter);\n      }\n\n      if (this.short) {\n        foundation = new MDCShortTopAppBarFoundation(adapter);\n      } else if (this.fixed) {\n        foundation = new MDCFixedTopAppBarFoundation(adapter);\n      } else {\n        foundation = new MDCTopAppBarFoundation(adapter);\n      }\n\n      return foundation;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterContentInit() {\n      this.actions.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        if (this.short && this.actions.length) {\n          this._getHostElement().classList.toggle(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      this._initFoundation();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this._scrollTargetSubscription) {\n        this._scrollTargetSubscription.unsubscribe();\n      }\n\n      this._destroyFoundation();\n    }\n    /**\n     * Sets the top app bar to fixed or not.\n     * @param {?} fixed\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n\n    setFixed(fixed, isUserInput = false) {\n      this._fixed = coerceBooleanProperty(fixed);\n\n      if (this.fixed && this.short) {\n        this.setShort(false);\n      }\n\n      if (isUserInput) {\n        this._initFoundation();\n      }\n    }\n    /**\n     * Sets the top app bar to prominent or not.\n     * @param {?} prominent\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n\n    setProminent(prominent, isUserInput = false) {\n      this._prominent = coerceBooleanProperty(prominent);\n\n      if (this.prominent && this.short) {\n        this.setShort(false);\n      }\n\n      if (isUserInput) {\n        this._initFoundation();\n      }\n    }\n    /**\n     * Sets the top app bar to dense variant.\n     * @param {?} dense\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n\n    setDense(dense, isUserInput = false) {\n      this._dense = coerceBooleanProperty(dense);\n\n      if (this.dense && this.short) {\n        this.setShort(false);\n      }\n\n      if (isUserInput) {\n        this._initFoundation();\n      }\n    }\n    /**\n     * Sets the top app bar to short or not.\n     * @param {?} short\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n\n    setShort(short, isUserInput = false) {\n      this._short = coerceBooleanProperty(short);\n\n      if (this.short) {\n        this.setProminent(false);\n        this.setDense(false);\n        this.setFixed(false);\n      } else {\n        this.setShortCollapsed(false);\n      }\n\n      if (isUserInput) {\n        this._initFoundation();\n      }\n    }\n    /**\n     * Sets the top app bar to short-collapsed or not.\n     * @param {?} shortCollapsed\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n\n    setShortCollapsed(shortCollapsed, isUserInput = false) {\n      this._shortCollapsed = coerceBooleanProperty(shortCollapsed);\n\n      if (this.shortCollapsed && !this.short) {\n        this.setShort(true);\n      }\n\n      if (isUserInput) {\n        this._initFoundation();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    isCollapsed() {\n      return this._getHostElement().classList.contains(cssClasses.SHORT_COLLAPSED_CLASS);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _initFoundation() {\n      this._destroyFoundation();\n\n      this._getHostElement().style.top = '0px';\n\n      this._resetFixedShort();\n\n      this._foundation = this.getDefaultFoundation();\n\n      this._foundation.init();\n\n      this._initTopAppBar();\n\n      this._initScrollHandler();\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _resetFixedShort() {\n      this._getHostElement().classList.remove(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n\n      this._getHostElement().classList.remove(cssClasses.SHORT_COLLAPSED_CLASS);\n\n      this._getHostElement().classList.remove(cssClasses.FIXED_SCROLLED_CLASS);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _initTopAppBar() {\n      if (!this.fixed) {\n        this._getHostElement().classList.remove(cssClasses.FIXED_SCROLLED_CLASS);\n      }\n\n      if (this.fixed && this._getScrollOffset() > 0) {\n        this._getHostElement().classList.add(cssClasses.FIXED_SCROLLED_CLASS);\n      }\n\n      if (!this.short) {\n        this._getHostElement().classList.remove(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n\n        this._getHostElement().classList.remove(cssClasses.SHORT_COLLAPSED_CLASS);\n      }\n\n      if (this.short && this._getScrollOffset() > 0) {\n        this._getHostElement().classList.add(cssClasses.SHORT_COLLAPSED_CLASS);\n      }\n\n      if (this.shortCollapsed) {\n        this._getHostElement().classList.add(cssClasses.SHORT_COLLAPSED_CLASS);\n      }\n\n      if (this.fixedAdjustElement) {\n        this._removeFixedAdjustClasses();\n\n        this._addFixedAdjustClass();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _removeFixedAdjustClasses() {\n      /** @type {?} */\n      this.fixedAdjustElement.classList.remove('mdc-top-app-bar--short-fixed-adjust');\n\n      /** @type {?} */\n      this.fixedAdjustElement.classList.remove('mdc-top-app-bar--fixed-adjust');\n\n      /** @type {?} */\n      this.fixedAdjustElement.classList.remove('mdc-top-app-bar--dense-fixed-adjust');\n\n      /** @type {?} */\n      this.fixedAdjustElement.classList.remove('mdc-top-app-bar--prominent-fixed-adjust');\n\n      /** @type {?} */\n      this.fixedAdjustElement.classList.remove('mdc-top-app-bar--dense-prominent-fixed-adjust');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _addFixedAdjustClass() {\n      if (this._short) {\n        /** @type {?} */\n        this.fixedAdjustElement.classList.add('mdc-top-app-bar--short-fixed-adjust');\n      } else if (this._dense && this._prominent) {\n        /** @type {?} */\n        this.fixedAdjustElement.classList.add('mdc-top-app-bar--dense-prominent-fixed-adjust');\n      } else if (this._dense) {\n        /** @type {?} */\n        this.fixedAdjustElement.classList.add('mdc-top-app-bar--dense-fixed-adjust');\n      } else if (this._prominent) {\n        /** @type {?} */\n        this.fixedAdjustElement.classList.add('mdc-top-app-bar--prominent-fixed-adjust');\n      } else {\n        /** @type {?} */\n        this.fixedAdjustElement.classList.add('mdc-top-app-bar--fixed-adjust');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _destroyFoundation() {\n      var _a;\n\n      (_a = this._foundation) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _initScrollHandler() {\n      if (this._scrollTargetSubscription) {\n        this._scrollTargetSubscription.unsubscribe();\n      }\n\n      if (!this._platform.isBrowser) {\n        return;\n      }\n\n      this._scrollTargetSubscription = this._ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => fromEvent(this.scrollTarget || window, 'scroll').subscribe(\n      /**\n      * @return {?}\n      */\n      () => this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => this._foundation.handleTargetScroll())));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _getScrollOffset() {\n      if (!this._platform.isBrowser) {\n        return 0;\n      }\n\n      return this.scrollTarget ? this.scrollTarget.scrollTop : window.pageYOffset;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @private\n     * @return {?}\n     */\n\n\n    _getHostElement() {\n      return this.elementRef.nativeElement;\n    }\n\n  }\n\n  MdcTopAppBar.ɵfac = function MdcTopAppBar_Factory(t) {\n    return new (t || MdcTopAppBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTopAppBar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdcTopAppBar,\n    selectors: [[\"mdc-top-app-bar\"], [\"\", \"mdc-top-app-bar\", \"\"]],\n    contentQueries: function MdcTopAppBar_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MdcTopAppBarNavigationIcon, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MdcTopAppBarActionItem, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navigationIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.actions = _t);\n      }\n    },\n    hostAttrs: [1, \"mdc-top-app-bar\"],\n    hostVars: 8,\n    hostBindings: function MdcTopAppBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mdc-top-app-bar--prominent\", ctx.prominent)(\"mdc-top-app-bar--dense\", ctx.dense)(\"mdc-top-app-bar--short\", ctx.short)(\"mdc-top-app-bar--fixed\", ctx.fixed);\n      }\n    },\n    inputs: {\n      fixed: \"fixed\",\n      prominent: \"prominent\",\n      short: \"short\",\n      shortCollapsed: \"shortCollapsed\",\n      dense: \"dense\",\n      fixedAdjustElement: \"fixedAdjustElement\",\n      scrollTarget: \"scrollTarget\"\n    },\n    outputs: {\n      navigationSelected: \"navigationSelected\"\n    },\n    exportAs: [\"mdcTopAppBar\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdcTopAppBar_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return MdcTopAppBar;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: top-app-bar/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst TOP_APP_BAR_DECLARATIONS = [MdcTopAppBar, MdcTopAppBarActionItem, MdcTopAppBarFixedAdjust, MdcTopAppBarNavigationIcon, MdcTopAppBarRow, MdcTopAppBarSection, MdcTopAppBarTitle];\nlet MdcTopAppBarModule = /*#__PURE__*/(() => {\n  class MdcTopAppBarModule {}\n\n  MdcTopAppBarModule.ɵfac = function MdcTopAppBarModule_Factory(t) {\n    return new (t || MdcTopAppBarModule)();\n  };\n\n  MdcTopAppBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcTopAppBarModule\n  });\n  MdcTopAppBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return MdcTopAppBarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcTopAppBarModule, {\n    declarations: function () {\n      return [MdcTopAppBar, MdcTopAppBarActionItem, MdcTopAppBarFixedAdjust, MdcTopAppBarNavigationIcon, MdcTopAppBarRow, MdcTopAppBarSection, MdcTopAppBarTitle];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdcTopAppBar, MdcTopAppBarActionItem, MdcTopAppBarFixedAdjust, MdcTopAppBarNavigationIcon, MdcTopAppBarRow, MdcTopAppBarSection, MdcTopAppBarTitle];\n    }\n  });\n})();\n\nexport { MdcTopAppBar, MdcTopAppBarActionItem, MdcTopAppBarFixedAdjust, MdcTopAppBarModule, MdcTopAppBarNavSelected, MdcTopAppBarNavigationIcon, MdcTopAppBarRow, MdcTopAppBarSection, MdcTopAppBarTitle }; //# sourceMappingURL=top-app-bar.js.map","map":null,"metadata":{},"sourceType":"module"}