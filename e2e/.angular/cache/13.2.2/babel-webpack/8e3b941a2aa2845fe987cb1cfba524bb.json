{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { Directive, NgZone, ElementRef, Input, NgModule } from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { MDCComponent } from '@angular-mdc/web/base';\nimport { MDCFloatingLabelFoundation, cssClasses } from '@material/floating-label';\n/**\n * @fileoverview added by tsickle\n * Generated from: floating-label/floating-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet MdcFloatingLabel = /*#__PURE__*/(() => {\n  class MdcFloatingLabel extends MDCComponent {\n    /**\n     * @param {?} _ngZone\n     * @param {?} elementRef\n     */\n    constructor(_ngZone, elementRef) {\n      super(elementRef);\n      this._ngZone = _ngZone;\n      this.elementRef = elementRef;\n      /**\n       * Emits whenever the component is destroyed.\n       */\n\n      this._destroy = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    getDefaultFoundation() {\n      /** @type {?} */\n      const adapter = {\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.remove(className),\n        getWidth:\n        /**\n        * @return {?}\n        */\n        () => this._getHostElement().scrollWidth,\n        registerInteractionHandler:\n        /**\n        * @return {?}\n        */\n        () => {},\n        deregisterInteractionHandler:\n        /**\n        * @return {?}\n        */\n        () => {}\n      };\n      return new MDCFloatingLabelFoundation(adapter);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterContentInit() {\n      this._loadListeners();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._destroy.next();\n\n      this._destroy.complete();\n    }\n    /**\n     * Returns the width of the label element.\n     * @return {?}\n     */\n\n\n    getWidth() {\n      return this._foundation.getWidth();\n    }\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param {?} shouldShake\n     * @return {?}\n     */\n\n\n    shake(shouldShake) {\n      this._foundation.shake(shouldShake);\n    }\n    /**\n     * Styles the label to float or dock.\n     * @param {?} shouldFloat\n     * @return {?}\n     */\n\n\n    float(shouldFloat) {\n      this._foundation.float(shouldFloat);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _loadListeners() {\n      this._ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => fromEvent(this._getHostElement(), 'animationend').pipe(takeUntil(this._destroy), filter(\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      e => e.target === this._getHostElement())).subscribe(\n      /**\n      * @return {?}\n      */\n      () => this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => this._getHostElement().classList.remove(cssClasses.LABEL_SHAKE))));\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @private\n     * @return {?}\n     */\n\n\n    _getHostElement() {\n      return this.elementRef.nativeElement;\n    }\n\n  }\n\n  MdcFloatingLabel.ɵfac = function MdcFloatingLabel_Factory(t) {\n    return new (t || MdcFloatingLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcFloatingLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcFloatingLabel,\n    selectors: [[\"label\", \"mdcFloatingLabel\", \"\"], [\"mdc-floating-label\"]],\n    hostAttrs: [1, \"mdc-floating-label\"],\n    hostVars: 1,\n    hostBindings: function MdcFloatingLabel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"for\", ctx.for);\n      }\n    },\n    inputs: {\n      for: \"for\"\n    },\n    exportAs: [\"mdcFloatingLabel\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  return MdcFloatingLabel;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: floating-label/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MdcFloatingLabelModule = /*#__PURE__*/(() => {\n  class MdcFloatingLabelModule {}\n\n  MdcFloatingLabelModule.ɵfac = function MdcFloatingLabelModule_Factory(t) {\n    return new (t || MdcFloatingLabelModule)();\n  };\n\n  MdcFloatingLabelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcFloatingLabelModule\n  });\n  MdcFloatingLabelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return MdcFloatingLabelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcFloatingLabelModule, {\n    declarations: [MdcFloatingLabel],\n    exports: [MdcFloatingLabel]\n  });\n})();\n\nexport { MdcFloatingLabel, MdcFloatingLabelModule }; //# sourceMappingURL=floating-label.js.map","map":null,"metadata":{},"sourceType":"module"}