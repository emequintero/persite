{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Input, ViewChild, NgModule } from '@angular/core';\nimport { MdcFloatingLabel, MdcFloatingLabelModule } from '@angular-mdc/web/floating-label';\nimport { MDCComponent } from '@angular-mdc/web/base';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline';\n/**\n * @fileoverview added by tsickle\n * Generated from: notched-outline/notched-outline.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular-mdc/web/floating-label';\nconst _c0 = [\"notch\"];\nconst _c1 = [\"mdcNotchedOutline\", \"\"];\nlet MdcNotchedOutline = /*#__PURE__*/(() => {\n  class MdcNotchedOutline extends MDCComponent {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      super(elementRef);\n      this.elementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    getDefaultFoundation() {\n      /** @type {?} */\n      const adapter = {\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this.elementRef.nativeElement.classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this.elementRef.nativeElement.classList.remove(className),\n        setNotchWidthProperty:\n        /**\n        * @param {?} width\n        * @return {?}\n        */\n        width => this._notchElement.nativeElement.style.setProperty('width', `${width}px`),\n        removeNotchWidthProperty:\n        /**\n        * @return {?}\n        */\n        () => this._notchElement.nativeElement.style.removeProperty('width')\n      };\n      return new MDCNotchedOutlineFoundation(adapter);\n    }\n    /**\n     * Updates classes and styles to open the notch to the specified width.\n     * @param {?} notchWidth\n     * @return {?}\n     */\n\n\n    notch(notchWidth) {\n      this._foundation.notch(notchWidth);\n    }\n    /**\n     * Updates classes and styles to close the notch.\n     * @return {?}\n     */\n\n\n    closeNotch() {\n      this._foundation.closeNotch();\n    }\n\n  }\n\n  MdcNotchedOutline.ɵfac = function MdcNotchedOutline_Factory(t) {\n    return new (t || MdcNotchedOutline)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcNotchedOutline.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdcNotchedOutline,\n    selectors: [[\"\", \"mdcNotchedOutline\", \"\"], [\"mdc-notched-outline\"]],\n    viewQuery: function MdcNotchedOutline_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(MdcFloatingLabel, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._notchElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floatingLabel = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mdc-notched-outline\"],\n    hostVars: 4,\n    hostBindings: function MdcNotchedOutline_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mdc-notched-outline--upgraded\", ctx.label)(\"mdc-notched-outline--no-label\", !ctx.label);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      for: \"for\"\n    },\n    exportAs: [\"mdcNotchedOutline\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c1,\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"mdc-notched-outline__leading\"], [1, \"mdc-notched-outline__notch\"], [\"notch\", \"\"], [\"mdcFloatingLabel\", \"\", 3, \"for\"], [1, \"mdc-notched-outline__trailing\"]],\n    template: function MdcNotchedOutline_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1, 2);\n        ɵngcc0.ɵɵelementStart(3, \"label\", 3);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"span\", 4);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"for\", ctx.for);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n      }\n    },\n    directives: [ɵngcc1.MdcFloatingLabel],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return MdcNotchedOutline;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: notched-outline/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MdcNotchedOutlineModule = /*#__PURE__*/(() => {\n  class MdcNotchedOutlineModule {}\n\n  MdcNotchedOutlineModule.ɵfac = function MdcNotchedOutlineModule_Factory(t) {\n    return new (t || MdcNotchedOutlineModule)();\n  };\n\n  MdcNotchedOutlineModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcNotchedOutlineModule\n  });\n  MdcNotchedOutlineModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[MdcFloatingLabelModule]]\n  });\n  return MdcNotchedOutlineModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcNotchedOutlineModule, {\n    declarations: function () {\n      return [MdcNotchedOutline];\n    },\n    imports: function () {\n      return [MdcFloatingLabelModule];\n    },\n    exports: function () {\n      return [MdcNotchedOutline];\n    }\n  });\n})();\n\nexport { MdcNotchedOutline, MdcNotchedOutlineModule }; //# sourceMappingURL=notched-outline.js.map","map":null,"metadata":{},"sourceType":"module"}