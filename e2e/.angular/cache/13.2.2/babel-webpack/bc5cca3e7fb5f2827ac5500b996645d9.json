{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { InjectionToken, Directive, ElementRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, NgZone, ChangeDetectorRef, Optional, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MdcIconModule } from '@angular-mdc/web/icon';\nimport { MdcTabIndicator, MdcTabIndicatorModule } from '@angular-mdc/web/tab-indicator';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MDCComponent } from '@angular-mdc/web/base';\nimport { MdcRipple } from '@angular-mdc/web/ripple';\nimport { MDCTabFoundation } from '@material/tab';\nimport { MDCRippleFoundation } from '@material/ripple';\n/**\n * @fileoverview added by tsickle\n * Generated from: tab/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token used to provide the parent MdcTabBar component to MdcTab.\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular-mdc/web/ripple';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular-mdc/web/icon';\nimport * as ɵngcc4 from '@angular-mdc/web/tab-indicator';\nconst _c0 = [\"content\"];\nconst _c1 = [\"ripplesurface\"];\nconst _c2 = [\"mdcTab\", \"\"];\n\nfunction MdcTab_mdc_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mdc-icon\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.icon);\n  }\n}\n\nfunction MdcTab_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.label);\n  }\n}\n\nfunction MdcTab_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MdcTab_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, MdcTab_ng_container_6_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    const _r5 = ɵngcc0.ɵɵreference(9);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n  }\n}\n\nfunction MdcTab_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MdcTab_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, MdcTab_ng_container_7_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    const _r5 = ɵngcc0.ɵɵreference(9);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n  }\n}\n\nfunction MdcTab_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mdc-tab-indicator\");\n  }\n}\n\nconst _c3 = [[[\"mdc-icon\"]], \"*\"];\nconst _c4 = [\"mdc-icon\", \"*\"];\nconst MDC_TAB_BAR_PARENT_COMPONENT = new InjectionToken('MDC_TAB_BAR_PARENT_COMPONENT');\n/** @type {?} */\n\nlet nextUniqueId = 0;\nlet MdcTabLabel = /*#__PURE__*/(() => {\n  class MdcTabLabel {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTabLabel.ɵfac = function MdcTabLabel_Factory(t) {\n    return new (t || MdcTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTabLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTabLabel,\n    selectors: [[\"mdc-tab-label\"], [\"\", \"mdcTabLabel\", \"\"]],\n    hostAttrs: [1, \"mdc-tab__text-label\"]\n  });\n  /** @nocollapse */\n\n  return MdcTabLabel;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTabIcon = /*#__PURE__*/(() => {\n  class MdcTabIcon {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n\n  }\n\n  MdcTabIcon.ɵfac = function MdcTabIcon_Factory(t) {\n    return new (t || MdcTabIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcTabIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcTabIcon,\n    selectors: [[\"mdc-tab-icon\"], [\"\", \"mdcTabIcon\", \"\"]],\n    hostAttrs: [1, \"mdc-tab__icon\"]\n  });\n  /** @nocollapse */\n\n  return MdcTabIcon;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdcTab = /*#__PURE__*/(() => {\n  class MdcTab extends MDCComponent {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} _ripple\n     * @param {?} elementRef\n     * @param {?} _parent\n     */\n    constructor(_ngZone, _changeDetectorRef, _ripple, elementRef, _parent) {\n      super(elementRef);\n      this._ngZone = _ngZone;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._ripple = _ripple;\n      this.elementRef = elementRef;\n      this._parent = _parent;\n      /**\n       * Emits whenever the component is destroyed.\n       */\n\n      this._destroy = new Subject();\n      this._uniqueId = `mdc-tab-${++nextUniqueId}`;\n      this.id = this._uniqueId;\n      this._stacked = false;\n      this._fixed = false;\n      this._disabled = false;\n      this._focusOnActivate = true;\n      this.interacted = new EventEmitter();\n      this._root = this.elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get stacked() {\n      return this._stacked;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set stacked(value) {\n      /** @type {?} */\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._stacked) {\n        this._stacked = newValue;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get fixed() {\n      return this._fixed;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set fixed(value) {\n      /** @type {?} */\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._fixed) {\n        this._fixed = newValue;\n\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get focusOnActivate() {\n      return this._focusOnActivate;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set focusOnActivate(value) {\n      /** @type {?} */\n      const newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._focusOnActivate) {\n        this._focusOnActivate = newValue;\n\n        this._foundation.setFocusOnActivate(this._focusOnActivate);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    getDefaultFoundation() {\n      /** @type {?} */\n      const adapter = {\n        setAttr:\n        /**\n        * @param {?} attr\n        * @param {?} value\n        * @return {?}\n        */\n        (attr, value) => this._getHostElement().setAttribute(attr, value),\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.remove(className),\n        hasClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => this._getHostElement().classList.contains(className),\n        activateIndicator:\n        /**\n        * @param {?} previousIndicatorClientRect\n        * @return {?}\n        */\n        previousIndicatorClientRect => this.tabIndicator.activate(previousIndicatorClientRect),\n        deactivateIndicator:\n        /**\n        * @return {?}\n        */\n        () => this.tabIndicator.deactivate(),\n        notifyInteracted:\n        /**\n        * @return {?}\n        */\n        () => this.interacted.emit({\n          detail: {\n            tabId: this.id,\n            tab: this\n          }\n        }),\n        getOffsetLeft:\n        /**\n        * @return {?}\n        */\n        () => this._getHostElement().offsetLeft,\n        getOffsetWidth:\n        /**\n        * @return {?}\n        */\n        () => this._getHostElement().offsetWidth,\n        getContentOffsetLeft:\n        /**\n        * @return {?}\n        */\n        () => this.content.nativeElement.offsetLeft,\n        getContentOffsetWidth:\n        /**\n        * @return {?}\n        */\n        () => this.content.nativeElement.offsetWidth,\n        focus:\n        /**\n        * @return {?}\n        */\n        () => this._getHostElement().focus()\n      };\n      return new MDCTabFoundation(adapter);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      this._foundation.init();\n\n      this._loadListeners();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      this._ripple = this._createRipple();\n\n      this._ripple.init();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      this._destroy.next();\n\n      this._destroy.complete();\n\n      this._ripple.destroy();\n    }\n    /**\n     * Getter for the active state of the tab\n     * @return {?}\n     */\n\n\n    get active() {\n      return this._foundation.isActive();\n    }\n    /**\n     * Activates the tab\n     * @param {?=} computeIndicatorClientRect\n     * @return {?}\n     */\n\n\n    activate(computeIndicatorClientRect) {\n      this._foundation.activate(computeIndicatorClientRect);\n    }\n    /**\n     * Deactivates the tab\n     * @return {?}\n     */\n\n\n    deactivate() {\n      this._foundation.deactivate();\n    }\n    /**\n     * Returns the indicator's client rect\n     * @return {?}\n     */\n\n\n    computeIndicatorClientRect() {\n      return this.tabIndicator.computeContentClientRect();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    computeDimensions() {\n      return this._foundation.computeDimensions();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    getTabBarParent() {\n      return this._parent;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    focus() {\n      this._getHostElement().focus();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _createRipple() {\n      /** @type {?} */\n      const rippleSurface =\n      /** @type {?} */\n      this.rippleSurface.nativeElement;\n      /** @type {?} */\n\n      const adapter = Object.assign(Object.assign({}, MdcRipple.createAdapter(this)), {\n        addClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => rippleSurface.classList.add(className),\n        removeClass:\n        /**\n        * @param {?} className\n        * @return {?}\n        */\n        className => rippleSurface.classList.remove(className),\n        updateCssVariable:\n        /**\n        * @param {?} varName\n        * @param {?} value\n        * @return {?}\n        */\n        (varName, value) => rippleSurface.style.setProperty(varName, value)\n      });\n      return new MdcRipple(this.elementRef, new MDCRippleFoundation(adapter));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    _loadListeners() {\n      this._ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => fromEvent(this._getHostElement(), 'click').pipe(takeUntil(this._destroy)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        if (!this.active && !this._disabled) {\n          this._foundation.handleClick();\n        }\n      })));\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @private\n     * @return {?}\n     */\n\n\n    _getHostElement() {\n      return this.elementRef.nativeElement;\n    }\n\n  }\n\n  MdcTab.ɵfac = function MdcTab_Factory(t) {\n    return new (t || MdcTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MdcRipple), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MDC_TAB_BAR_PARENT_COMPONENT, 8));\n  };\n\n  MdcTab.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdcTab,\n    selectors: [[\"\", \"mdcTab\", \"\"], [\"mdc-tab\"]],\n    viewQuery: function MdcTab_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(MdcTabIndicator, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rippleSurface = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabIndicator = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"tab\", 1, \"mdc-tab\"],\n    hostVars: 7,\n    hostBindings: function MdcTab_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"mdc-tab--stacked\", ctx.stacked)(\"mdc-tab--min-width\", ctx.fixed)(\"ngx-mdc-tab--disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      stacked: \"stacked\",\n      fixed: \"fixed\",\n      disabled: \"disabled\",\n      focusOnActivate: \"focusOnActivate\",\n      label: \"label\",\n      icon: \"icon\"\n    },\n    outputs: {\n      interacted: \"interacted\"\n    },\n    exportAs: [\"mdcTab\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([MdcRipple]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c2,\n    ngContentSelectors: _c4,\n    decls: 12,\n    vars: 4,\n    consts: [[1, \"mdc-tab__content\"], [\"content\", \"\"], [\"class\", \"mdc-tab__icon\", 4, \"ngIf\"], [\"class\", \"mdc-tab__text-label\", 4, \"ngIf\"], [4, \"ngIf\"], [\"indicator\", \"\"], [1, \"mdc-tab__ripple\"], [\"ripplesurface\", \"\"], [1, \"mdc-tab__icon\"], [1, \"mdc-tab__text-label\"], [4, \"ngTemplateOutlet\"]],\n    template: function MdcTab_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MdcTab_mdc_icon_2_Template, 2, 1, \"mdc-icon\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵtemplate(4, MdcTab_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵprojection(5, 1);\n        ɵngcc0.ɵɵtemplate(6, MdcTab_ng_container_6_Template, 2, 1, \"ng-container\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, MdcTab_ng_container_7_Template, 2, 1, \"ng-container\", 4);\n        ɵngcc0.ɵɵtemplate(8, MdcTab_ng_template_8_Template, 1, 0, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelement(10, \"div\", 6, 7);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.label);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fixed);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.fixed);\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc3.MdcIcon, ɵngcc2.NgTemplateOutlet, ɵngcc4.MdcTabIndicator],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  return MdcTab;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: tab/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst TAB_DECLARATIONS = [MdcTab, MdcTabIcon, MdcTabLabel];\nlet MdcTabModule = /*#__PURE__*/(() => {\n  class MdcTabModule {}\n\n  MdcTabModule.ɵfac = function MdcTabModule_Factory(t) {\n    return new (t || MdcTabModule)();\n  };\n\n  MdcTabModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcTabModule\n  });\n  MdcTabModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MdcTabIndicatorModule, MdcIconModule]]\n  });\n  return MdcTabModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcTabModule, {\n    declarations: function () {\n      return [MdcTab, MdcTabIcon, MdcTabLabel];\n    },\n    imports: function () {\n      return [CommonModule, MdcTabIndicatorModule, MdcIconModule];\n    },\n    exports: function () {\n      return [MdcTab, MdcTabIcon, MdcTabLabel];\n    }\n  });\n})();\n\nexport { MDC_TAB_BAR_PARENT_COMPONENT, MdcTab, MdcTabIcon, MdcTabLabel, MdcTabModule }; //# sourceMappingURL=tab.js.map","map":null,"metadata":{},"sourceType":"module"}