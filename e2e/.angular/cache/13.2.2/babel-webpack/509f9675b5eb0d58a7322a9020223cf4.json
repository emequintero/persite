{"ast":null,"code":"/**\n * @license\n * Copyright (c) Dominic Carretto\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Input, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * Generated from: elevation/elevation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet MdcElevation = /*#__PURE__*/(() => {\n  class MdcElevation {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.mdcElevation = 0;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      /** @type {?} */\n      const change = changes['mdcElevation'];\n\n      if (change.currentValue < 0 || change.currentValue > 24) {\n        throw new Error(`Valid mdc-elevation values are 0 through 24`);\n      }\n\n      if (!change.isFirstChange()) {\n        this.elementRef.nativeElement.classList.remove(`mdc-elevation--z${change.previousValue}`);\n      }\n\n      this.elementRef.nativeElement.classList.add(`mdc-elevation--z${change.currentValue}`);\n    }\n\n  }\n\n  MdcElevation.ɵfac = function MdcElevation_Factory(t) {\n    return new (t || MdcElevation)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdcElevation.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdcElevation,\n    selectors: [[\"\", \"mdcElevation\", \"\"]],\n    inputs: {\n      mdcElevation: \"mdcElevation\"\n    },\n    exportAs: [\"mdcElevation\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  /** @nocollapse */\n\n  return MdcElevation;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: elevation/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet MdcElevationModule = /*#__PURE__*/(() => {\n  class MdcElevationModule {}\n\n  MdcElevationModule.ɵfac = function MdcElevationModule_Factory(t) {\n    return new (t || MdcElevationModule)();\n  };\n\n  MdcElevationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdcElevationModule\n  });\n  MdcElevationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return MdcElevationModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdcElevationModule, {\n    declarations: [MdcElevation],\n    exports: [MdcElevation]\n  });\n})();\n\nexport { MdcElevation, MdcElevationModule }; //# sourceMappingURL=elevation.js.map","map":null,"metadata":{},"sourceType":"module"}